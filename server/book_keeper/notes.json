[
  {
    "-1": "Add module.exports = {} at ALL TIMES",

    "0": "npm init - initialization",

    "1": "npm i express dotenv mongoose colors  ,  npm i -D nodemon",
    "2": "Add script in package.json, .gitignore",
    "3": "import express and dotenv in server.js, and .env file, listening to port",
    "4": "Add routes/goalRoutes.js -> module.exports, router",
    "4.1": "server.js-> the route is followed after app.use('route', require('././')",
    "4.2": "goalRoutes.js -> ",
    "5": "if the routes are same, we can chain them using      router.route('/path/here')    .get().post().put().delete()",
    "6": "Add error handler middleware",
    "7": "Mongoose returns a promise with the info. So, by default, you can use .then().catch() or",
    "7.1": "You can make controllers async, and use try {} catch {} blocks",
    "7.2": "npm i express-async-handler",
    "7.3": "Wrap entire controller functions body with    asyncHandler before working with the database",

    "8": "Connecting to mongo db",
    "8.1": "Create a config/db.js file and export an `async` function which connects to the db using MONGO_URI from the env",
    "8.2": "call that function in the server.js and it will get connected",
    "8.3": "if it fails, check for (1) DB permissions and ID address in mongodb atlas, (2) Check if MONGO_URI is correct",

    "9": "Models in MERN [REFER to R2_models_give_func_for_mongodb below]",
    "9.1": "Models from mongoose.Schema({}) provides in-built functions for DB management, document CRUD operations, etc.",

    "Notes": [
      "React FE <> REST API <> Express",
      "1st file => app.use()",
      "further files => const router = express.Router(); router.get(), router.post(), router... ()",
      "params: router.get,post,etc('route', [middleware], controller)",
      "controller: a function (req, res, next) => {}",
      "req, res, next: these are provided by the express itself"
    ],
    "Reference_links": {
      "R1_express_async_handler": "https://stackoverflow.com/questions/56973265/what-does-express-async-handler-do",
      "R2_models_give_func_for_mongodb": "https://mongoosejs.com/docs/models.html"
    },
    "images": {
      "1_we_have_to_add_express_json_in_server_file": "No output of body",
      "2_we_have_added_express_json_in_server_file": "Got output of body after adding",
      "3_express_async_handler": "[Refer R1_express_async_handler link as well] - Usage of this handler"
    }
  }
]
